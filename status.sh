#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ WHM AI –ø—Ä–æ–µ–∫—Ç–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME="whm_ai"
PROJECT_DIR="/home/$(whoami)/$PROJECT_NAME"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

echo "=========================================="
echo "üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê WHM AI"
echo "=========================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -d "$PROJECT_DIR" ]; then
    error "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $PROJECT_DIR"
    echo "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: ./deploy.sh"
    exit 1
fi

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
log "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    echo "   ‚úÖ Node.js: $NODE_VERSION"
else
    error "   ‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
log "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2..."
if command -v pm2 &> /dev/null; then
    PM2_VERSION=$(pm2 --version)
    echo "   ‚úÖ PM2: $PM2_VERSION"
else
    error "   ‚ùå PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
log "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command -v docker &> /dev/null; then
    DOCKER_VERSION=$(docker --version)
    echo "   ‚úÖ Docker: $DOCKER_VERSION"
else
    error "   ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if pm2 list | grep -q "$PROJECT_NAME"; then
    APP_STATUS=$(pm2 jlist | jq -r '.[] | select(.name=="'$PROJECT_NAME'") | .pm2_env.status // "unknown"')
    if [ "$APP_STATUS" = "online" ]; then
        echo "   ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $APP_STATUS"
    else
        warn "   ‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $APP_STATUS"
    fi
else
    error "   ‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ PM2"
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "$PROJECT_DIR/.env" ]; then
    DB_HOST=$(grep "^DATABASE_HOST=" "$PROJECT_DIR/.env" | cut -d'=' -f2)
    DB_PORT=$(grep "^DATABASE_PORT=" "$PROJECT_DIR/.env" | cut -d'=' -f2)
    DB_NAME=$(grep "^DB_NAME=" "$PROJECT_DIR/.env" | cut -d'=' -f2)
    
    if [ -n "$DB_HOST" ] && [ -n "$DB_PORT" ] && [ -n "$DB_NAME" ]; then
        echo "   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î: $DB_HOST:$DB_PORT/$DB_NAME"
        echo "   ‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω–µ—à–Ω—è—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    else
        warn "   ‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î –Ω–µ–ø–æ–ª–Ω—ã–µ"
    fi
else
    error "   ‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
log "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ -f "$PROJECT_DIR/.env" ]; then
    echo "   ‚úÖ .env —Ñ–∞–π–ª: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    REQUIRED_VARS=("TELEGRAM_BOT_TOKEN" "OPENAI_API_KEY_PRO" "DATABASE_HOST" "DB_USER" "DB_PASS")
    MISSING_VARS=()
    
    for var in "${REQUIRED_VARS[@]}"; do
        if ! grep -q "^${var}=" "$PROJECT_DIR/.env" || grep -q "^${var}=$" "$PROJECT_DIR/.env" || grep -q "^${var}=your_" "$PROJECT_DIR/.env"; then
            MISSING_VARS+=("$var")
        fi
    done
    
    if [ ${#MISSING_VARS[@]} -eq 0 ]; then
        echo "   ‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    else
        warn "   ‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${MISSING_VARS[*]}"
    fi
else
    error "   ‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
log "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
if command -v netstat &> /dev/null; then
    if netstat -tlnp 2>/dev/null | grep -q ":3000"; then
        echo "   ‚úÖ –ü–æ—Ä—Ç 3000: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    else
        warn "   ‚ö†Ô∏è –ü–æ—Ä—Ç 3000: –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
    
    if netstat -tlnp 2>/dev/null | grep -q ":5432"; then
        echo "   ‚úÖ –ü–æ—Ä—Ç 5432: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (–≤–æ–∑–º–æ–∂–Ω–æ, –≤–Ω–µ—à–Ω—è—è –ë–î)"
    else
        echo "   ‚ÑπÔ∏è  –ü–æ—Ä—Ç 5432: –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (–≤–Ω–µ—à–Ω—è—è –ë–î)"
    fi
else
    warn "   ‚ö†Ô∏è netstat –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤"
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
log "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞..."
DISK_USAGE=$(df -h "$PROJECT_DIR" | tail -1 | awk '{print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -lt 80 ]; then
    echo "   ‚úÖ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ: ${DISK_USAGE}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ"
else
    warn "   ‚ö†Ô∏è –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ: ${DISK_USAGE}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ"
fi

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
log "üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏..."
MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
echo "   üìä –ü–∞–º—è—Ç—å: ${MEMORY_USAGE}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ"

# 10. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
log "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if pm2 list | grep -q "$PROJECT_NAME"; then
    echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:"
    pm2 logs $PROJECT_NAME --lines 5 --nostream 2>/dev/null | sed 's/^/   /'
else
    echo "   –ù–µ—Ç –ª–æ–≥–æ–≤ (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ)"
fi

echo ""
echo "=========================================="
echo "üìä –°–í–û–î–ö–ê –ü–†–û–í–ï–†–ö–ò"
echo "=========================================="

# –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
TOTAL_CHECKS=10
PASSED_CHECKS=0
WARNING_CHECKS=0
FAILED_CHECKS=0

# –ü—Ä–æ—Å—Ç–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
if command -v node &> /dev/null; then ((PASSED_CHECKS++)); fi
if command -v pm2 &> /dev/null; then ((PASSED_CHECKS++)); fi
if command -v docker &> /dev/null; then ((PASSED_CHECKS++)); fi
if [ -f "$PROJECT_DIR/.env" ]; then ((PASSED_CHECKS++)); fi
if [ -d "$PROJECT_DIR" ]; then ((PASSED_CHECKS++)); fi

echo "‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $PASSED_CHECKS/$TOTAL_CHECKS"
echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNING_CHECKS"
echo "‚ùå –û—à–∏–±–æ–∫: $FAILED_CHECKS"

echo ""
echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
if [ ${#MISSING_VARS[@]} -gt 0 ]; then
    echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª–µ"
fi
if ! pm2 list | grep -q "$PROJECT_NAME"; then
    echo "   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PM2"
fi
if ! docker-compose -f "$PROJECT_DIR/docker-compose.yml" ps | grep -q "Up"; then
    echo "   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Docker Compose"
fi

echo ""
echo "=========================================="
echo "üîß –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./manage.sh"
echo "=========================================="
